plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '6.6.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.2.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0"
//    implementation "org.springdoc:springdoc-openapi-ui:2.1.0"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0"
    implementation "org.openapitools:jackson-databind-nullable:0.2.6"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

processResources {
    dependsOn "openApiGenerate"
    from "$buildDir/generated/classes"
}

sourceSets.main.java.srcDirs = ['build/generated/src/main/java', 'src/main/java']

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
//tasks.register("openApiGenerate", org.openapitools.generator.gradle.plugin.tasks.GenerateTask::class){
//    generatorName.set("spring")
//    inputSpec.set("$rootDir/app/src/main/resources/openapi-bluff.yaml")
//    outputDir.set("$buildDir/generated")
//    apiPackage.set("org.example.cardgames")
//    modelPackage.set("org.example.cardgames.model")
//    configFile.set("$rootDir/app/src/main/resources/config.json")
//}


openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi-bluff.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "org.example.cardgames"
    modelPackage = "org.example.cardgames.model"
    configFile = "$rootDir/src/main/resources/config.json".toString()
}
compileJava.dependsOn tasks.named("openApiGenerate")
